// <auto-generated/>
using Immich.Sdk.Generated.Assets.Item.Original;
using Immich.Sdk.Generated.Assets.Item.Thumbnail;
using Immich.Sdk.Generated.Assets.Item.Video;
using Immich.Sdk.Generated.Models;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace Immich.Sdk.Generated.Assets.Item
{
    /// <summary>
    /// Builds and executes requests for operations under \assets\{id}
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.16.0")]
    public partial class AssetsItemRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The original property</summary>
        public global::Immich.Sdk.Generated.Assets.Item.Original.OriginalRequestBuilder Original
        {
            get => new global::Immich.Sdk.Generated.Assets.Item.Original.OriginalRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The thumbnail property</summary>
        public global::Immich.Sdk.Generated.Assets.Item.Thumbnail.ThumbnailRequestBuilder Thumbnail
        {
            get => new global::Immich.Sdk.Generated.Assets.Item.Thumbnail.ThumbnailRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The video property</summary>
        public global::Immich.Sdk.Generated.Assets.Item.Video.VideoRequestBuilder Video
        {
            get => new global::Immich.Sdk.Generated.Assets.Item.Video.VideoRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Immich.Sdk.Generated.Assets.Item.AssetsItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public AssetsItemRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/assets/{id}{?key*}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Immich.Sdk.Generated.Assets.Item.AssetsItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public AssetsItemRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/assets/{id}{?key*}", rawUrl)
        {
        }
        /// <returns>A <see cref="global::Immich.Sdk.Generated.Models.AssetResponseDto"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Immich.Sdk.Generated.Models.AssetResponseDto?> GetAsync(Action<RequestConfiguration<global::Immich.Sdk.Generated.Assets.Item.AssetsItemRequestBuilder.AssetsItemRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Immich.Sdk.Generated.Models.AssetResponseDto> GetAsync(Action<RequestConfiguration<global::Immich.Sdk.Generated.Assets.Item.AssetsItemRequestBuilder.AssetsItemRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            return await RequestAdapter.SendAsync<global::Immich.Sdk.Generated.Models.AssetResponseDto>(requestInfo, global::Immich.Sdk.Generated.Models.AssetResponseDto.CreateFromDiscriminatorValue, default, cancellationToken).ConfigureAwait(false);
        }
        /// <returns>A <see cref="global::Immich.Sdk.Generated.Models.AssetResponseDto"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Immich.Sdk.Generated.Models.AssetResponseDto?> PutAsync(global::Immich.Sdk.Generated.Models.UpdateAssetDto body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Immich.Sdk.Generated.Models.AssetResponseDto> PutAsync(global::Immich.Sdk.Generated.Models.UpdateAssetDto body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = ToPutRequestInformation(body, requestConfiguration);
            return await RequestAdapter.SendAsync<global::Immich.Sdk.Generated.Models.AssetResponseDto>(requestInfo, global::Immich.Sdk.Generated.Models.AssetResponseDto.CreateFromDiscriminatorValue, default, cancellationToken).ConfigureAwait(false);
        }
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Immich.Sdk.Generated.Assets.Item.AssetsItemRequestBuilder.AssetsItemRequestBuilderGetQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Immich.Sdk.Generated.Assets.Item.AssetsItemRequestBuilder.AssetsItemRequestBuilderGetQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToPutRequestInformation(global::Immich.Sdk.Generated.Models.UpdateAssetDto body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToPutRequestInformation(global::Immich.Sdk.Generated.Models.UpdateAssetDto body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = new RequestInformation(Method.PUT, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            requestInfo.SetContentFromParsable(RequestAdapter, "application/json", body);
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::Immich.Sdk.Generated.Assets.Item.AssetsItemRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::Immich.Sdk.Generated.Assets.Item.AssetsItemRequestBuilder WithUrl(string rawUrl)
        {
            return new global::Immich.Sdk.Generated.Assets.Item.AssetsItemRequestBuilder(rawUrl, RequestAdapter);
        }
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.16.0")]
        #pragma warning disable CS1591
        public partial class AssetsItemRequestBuilderGetQueryParameters 
        #pragma warning restore CS1591
        {
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("key")]
            public string? Key { get; set; }
#nullable restore
#else
            [QueryParameter("key")]
            public string Key { get; set; }
#endif
        }
    }
}
