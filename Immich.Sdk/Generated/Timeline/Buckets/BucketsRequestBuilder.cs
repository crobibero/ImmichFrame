// <auto-generated/>
using Immich.Sdk.Generated.Models;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace Immich.Sdk.Generated.Timeline.Buckets
{
    /// <summary>
    /// Builds and executes requests for operations under \timeline\buckets
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.16.0")]
    public partial class BucketsRequestBuilder : BaseRequestBuilder
    {
        /// <summary>
        /// Instantiates a new <see cref="global::Immich.Sdk.Generated.Timeline.Buckets.BucketsRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public BucketsRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/timeline/buckets?size={size}{&albumId*,isArchived*,isFavorite*,isTrashed*,key*,order*,personId*,userId*,withPartners*,withStacked*}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Immich.Sdk.Generated.Timeline.Buckets.BucketsRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public BucketsRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/timeline/buckets?size={size}{&albumId*,isArchived*,isFavorite*,isTrashed*,key*,order*,personId*,userId*,withPartners*,withStacked*}", rawUrl)
        {
        }
        /// <returns>A List&lt;global::Immich.Sdk.Generated.Models.TimeBucketResponseDto&gt;</returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<List<global::Immich.Sdk.Generated.Models.TimeBucketResponseDto>?> GetAsync(Action<RequestConfiguration<global::Immich.Sdk.Generated.Timeline.Buckets.BucketsRequestBuilder.BucketsRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<List<global::Immich.Sdk.Generated.Models.TimeBucketResponseDto>> GetAsync(Action<RequestConfiguration<global::Immich.Sdk.Generated.Timeline.Buckets.BucketsRequestBuilder.BucketsRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            var collectionResult = await RequestAdapter.SendCollectionAsync<global::Immich.Sdk.Generated.Models.TimeBucketResponseDto>(requestInfo, global::Immich.Sdk.Generated.Models.TimeBucketResponseDto.CreateFromDiscriminatorValue, default, cancellationToken).ConfigureAwait(false);
            return collectionResult?.AsList();
        }
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Immich.Sdk.Generated.Timeline.Buckets.BucketsRequestBuilder.BucketsRequestBuilderGetQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Immich.Sdk.Generated.Timeline.Buckets.BucketsRequestBuilder.BucketsRequestBuilderGetQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::Immich.Sdk.Generated.Timeline.Buckets.BucketsRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::Immich.Sdk.Generated.Timeline.Buckets.BucketsRequestBuilder WithUrl(string rawUrl)
        {
            return new global::Immich.Sdk.Generated.Timeline.Buckets.BucketsRequestBuilder(rawUrl, RequestAdapter);
        }
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.16.0")]
        #pragma warning disable CS1591
        public partial class BucketsRequestBuilderGetQueryParameters 
        #pragma warning restore CS1591
        {
            [QueryParameter("albumId")]
            public Guid? AlbumId { get; set; }
            [QueryParameter("isArchived")]
            public bool? IsArchived { get; set; }
            [QueryParameter("isFavorite")]
            public bool? IsFavorite { get; set; }
            [QueryParameter("isTrashed")]
            public bool? IsTrashed { get; set; }
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("key")]
            public string? Key { get; set; }
#nullable restore
#else
            [QueryParameter("key")]
            public string Key { get; set; }
#endif
            [QueryParameter("order")]
            public global::Immich.Sdk.Generated.Models.AssetOrder? Order { get; set; }
            [QueryParameter("personId")]
            public Guid? PersonId { get; set; }
            [QueryParameter("size")]
            public global::Immich.Sdk.Generated.Models.TimeBucketSize? Size { get; set; }
            [QueryParameter("userId")]
            public Guid? UserId { get; set; }
            [QueryParameter("withPartners")]
            public bool? WithPartners { get; set; }
            [QueryParameter("withStacked")]
            public bool? WithStacked { get; set; }
        }
    }
}
