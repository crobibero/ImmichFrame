// <auto-generated/>
using Immich.Sdk.Generated.Download.Archive;
using Immich.Sdk.Generated.Download.Info;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System;
namespace Immich.Sdk.Generated.Download
{
    /// <summary>
    /// Builds and executes requests for operations under \download
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.16.0")]
    public partial class DownloadRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The archive property</summary>
        public global::Immich.Sdk.Generated.Download.Archive.ArchiveRequestBuilder Archive
        {
            get => new global::Immich.Sdk.Generated.Download.Archive.ArchiveRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The info property</summary>
        public global::Immich.Sdk.Generated.Download.Info.InfoRequestBuilder Info
        {
            get => new global::Immich.Sdk.Generated.Download.Info.InfoRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Immich.Sdk.Generated.Download.DownloadRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public DownloadRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/download", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Immich.Sdk.Generated.Download.DownloadRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public DownloadRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/download", rawUrl)
        {
        }
    }
}
